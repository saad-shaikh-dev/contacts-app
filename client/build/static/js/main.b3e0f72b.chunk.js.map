{"version":3,"sources":["context/authentication/authContext.js","context/contact/contactContext.js","components/Navbar.js","components/contacts/ContactForm.js","components/contacts/ContactSearch.js","components/contacts/ContactCard.js","components/contacts/Contacts.js","components/pages/Home.js","components/pages/About.js","context/types.js","context/contact/contactReducer.js","context/contact/ContactState.js","context/authentication/authReducer.js","utilities/setAuthenticationToken.js","context/authentication/AuthState.js","context/alert/alertContext.js","components/alert/Alerts.js","components/authentication/Register.js","components/authentication/Login.js","components/PrivateRoute.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","index.js"],"names":["AuthContext","createContext","ContactContext","Navbar","title","icon","authContext","useContext","isAuthenticated","logout","user","clearContacts","className","to","name","onClick","ContactForm","contactContext","createContact","clearCurrentContact","updateContact","current","useEffect","setContact","email","phone","type","useState","contact","onChange","change","target","value","href","id","onSubmit","submit","preventDefault","placeholder","required","minLength","maxLength","checked","ContactSearch","searchContact","clearContactSearch","filtered","text","useRef","ref","changes","ContactCard","deleteContact","setCurrentContact","_id","Contacts","contacts","readContacts","loading","length","map","Home","loadUser","About","CREATE_CONTACT","READ_CONTACTS","UPDATE_CONTACT","DELETE_CONTACT","FILTER_CONTACTS","CLEAR_CONTACTS","SET_CURRENT","CLEAR_CURRENT","CLEAR_FILTER","CONTACT_ERROR","SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","contactReducer","state","action","payload","filter","error","regex","RegExp","match","ContactState","props","useReducer","dispatch","a","config","headers","axios","post","response","data","message","get","put","delete","Provider","children","authReducer","localStorage","setItem","token","removeItem","setAuthenticationToken","defaults","common","AuthState","initialState","getItem","register","formData","login","clearErrors","AlertContext","Alerts","alertContext","alerts","alert","Register","setAlert","history","push","password","passwordConfirmation","setUser","Login","PrivateRoute","Component","component","rest","render","alertReducer","AlertState","uuid","v4","setTimeout","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3e0f72b.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst AuthContext = createContext();\n\nexport default AuthContext;\n","import { createContext } from \"react\";\n\nconst ContactContext = createContext();\n\nexport default ContactContext;\n","import React, { Fragment, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../context/authentication/authContext\";\nimport ContactContext from \"../context/contact/contactContext\";\n\nconst Navbar = ({ title, icon }) => {\n  // import authentication context\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated, logout, user } = authContext;\n  // import contact context\n  const contactContext = useContext(ContactContext);\n  const { clearContacts } = contactContext;\n\n  // logout function\n  const onLogout = () => {\n    logout();\n    clearContacts();\n  };\n\n  return (\n    <div className=\"navbar\">\n      <div className=\"nav-title\">\n        <h1>\n          <Link className=\"navlink\" to=\"/\">\n            Contacts App\n          </Link>\n        </h1>\n      </div>\n\n      <div className=\"navlinks\">\n        {isAuthenticated ? (\n          <Fragment>\n            <Fragment>\n              Welcome <strong>{user && user.name}</strong>\n            </Fragment>\n            <Link className=\"navlink\" to=\"#!\" onClick={onLogout}>\n              Logout\n            </Link>\n          </Fragment>\n        ) : (\n          <Fragment>\n            <Link className=\"navlink\" to=\"/register\">\n              Register\n            </Link>\n            <Link className=\"navlink\" to=\"/login\">\n              Login\n            </Link>\n          </Fragment>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useContext, useEffect, Fragment } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\n// CrUd - Create and Update contact\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n  const { createContact, clearCurrentContact, updateContact, current } =\n    contactContext;\n  // add contact details of current contact if edit button is clicked\n  useEffect(() => {\n    current\n      ? setContact(current)\n      : setContact({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        type: \"personal\",\n      });\n  }, [contactContext, current]);\n\n  // default values of the contact form\n  const [contact, setContact] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    type: \"personal\",\n  });\n  const { name, email, phone, type } = contact;\n\n  // add values to temporary object\n  const onChange = change =>\n    setContact({ ...contact, [change.target.name]: change.target.value });\n\n  // if submit button is clicked\n  const onSubmit = submit => {\n    submit.preventDefault();\n    // choose weather to create or update a contact\n    !current ? createContact(contact) : updateContact(contact);\n    // revert form to default values\n    clearCurrentContact();\n  };\n\n  return (\n    <Fragment>\n      <a className=\"create-contact-link\" href=\"#contact-form\">\n        <button className=\"create-contact-button\" id=\"create-contact-button\">\n          +\n        </button>\n      </a>\n\n      <form\n        className=\"contact-form\"\n        id=\"contact-form\"\n        onSubmit={onSubmit} /* ref={(ref) => {\n          inputEl.current = ref;\n        }} */\n      >\n        <h2>{current ? \"Update contact\" : \"Create contact\"}</h2>\n        {/* input fields */}\n        <input\n          className=\"input-field\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={onChange}\n          placeholder=\"Name\"\n          required\n        />\n        <input\n          className=\"input-field\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={onChange}\n          placeholder=\"Email\"\n        />\n        <input\n          className=\"input-field\"\n          minLength=\"8\"\n          maxLength=\"8\"\n          type=\"phone\"\n          name=\"phone\"\n          value={phone}\n          onChange={onChange}\n          placeholder=\"Phone\"\n        />\n        {/* personal or work check box */}\n        <div>\n          <h3>Contact type</h3>\n          <input\n            type=\"radio\"\n            name=\"type\"\n            value=\"personal\"\n            checked={type === \"personal\"}\n            onChange={onChange}\n          />\n          &nbsp; Personal &nbsp;\n          <input\n            type=\"radio\"\n            name=\"type\"\n            value=\"work\"\n            checked={type === \"work\"}\n            onChange={onChange}\n          />\n          &nbsp; Work\n        </div>\n        {/* submit and clear button */}\n        <div>\n          <input\n            className=\"button button-submit\"\n            type=\"submit\"\n            value={current ? \"Update contact\" : \"Create contact\"}\n          />\n          <a\n            href=\"#create-contact-button\"\n            className=\"close-modal\"\n            onClick={clearCurrentContact}\n          >\n            x\n          </a>\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default ContactForm;\n","import React, { Fragment, useContext, useEffect, useRef } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\nconst ContactSearch = () => {\n  const contactContext = useContext(ContactContext);\n  const { searchContact, clearContactSearch, filtered } = contactContext;\n  const text = useRef(\"\");\n\n  useEffect(() => {\n    if (!filtered) text.current.value = \"\";\n  });\n\n  const onChange = changes => {\n    text.current.value\n      ? searchContact(changes.target.value)\n      : clearContactSearch();\n  };\n  return (\n    <form>\n      <input\n        className=\"input-field searchbar\"\n        ref={text}\n        type=\"text\"\n        onChange={onChange}\n        placeholder=\"Search contacts...\"\n      />\n    </form>\n  );\n};\n\nexport default ContactSearch;\n","import React, { useContext, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\n// cRUD - Read and Delete contacts, link to Update contact\nconst ContactCard = ({ contact }) => {\n  const contactContext = useContext(ContactContext);\n  const {\n    deleteContact,\n    setCurrentContact,\n    clearCurrentContact,\n    clearContactSearch,\n  } = contactContext;\n  const { _id, name, email, phone, type } = contact;\n\n  // update method\n  const onUpdate = () => setCurrentContact(contact);\n  //delete method\n  const onDelete = () => {\n    deleteContact(_id);\n    // clear any updating so deleted contacts cannot be updated\n    clearCurrentContact();\n    clearContactSearch();\n  };\n\n  return (\n    <div className=\"contact-card\">\n      <h3>\n        {name}\n        <span\n          className={\n            \"badge \" +\n            (type === \"work\" ? \"badge-work\" : \"badge-personal\")\n          }\n        >\n          {type}\n        </span>\n      </h3>\n      <ul className=\"contact-details\">\n        <li>\n          <i className=\"fas fa-envelope-open\"></i>&nbsp;&nbsp;\n          {email ? <Fragment>{email}</Fragment> : <Fragment>No email</Fragment>}\n        </li>\n        <li>\n          <i className=\"fas fa-phone\"></i>&nbsp;&nbsp;\n          {phone ? (\n            <Fragment>{phone}</Fragment>\n          ) : (\n            <Fragment>No phone number</Fragment>\n          )}\n        </li>\n      </ul>\n      <p>\n        <a href=\"#contact-form\">\n          <button className=\"button button-edit\" onClick={onUpdate}>\n            Edit\n          </button>\n        </a>\n        <button className=\"button button-delete\" onClick={onDelete}>\n          Delete\n        </button>\n      </p>\n    </div>\n  );\n};\n\nContactCard.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default ContactCard;\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\";\nimport ContactSearch from \"./ContactSearch\";\nimport ContactCard from \"./ContactCard\";\n\nconst Contacts = () => {\n  // import context\n  const contactContext = useContext(ContactContext);\n  const { contacts, filtered, readContacts, loading } = contactContext;\n\n  // use effect\n  useEffect(() => {\n    readContacts();\n    // eslint-disable-next-line\n  }, []);\n\n  if (contacts !== null && !contacts.length && !loading)\n    return <p className=\"no-contacts\">You have no contacts</p>;\n\n  return (\n    <Fragment>\n      <h2>My contacts</h2>\n      <ContactSearch />\n      <div className=\"contacts-list\">\n        {filtered\n          ? filtered.map(contact => (\n              <ContactCard key={contact._id} contact={contact} />\n            ))\n          : contacts.map(contact => (\n              <ContactCard key={contact._id} contact={contact} />\n            ))}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Contacts;\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport ContactForm from \"../contacts/ContactForm\";\nimport Contacts from \"../contacts/Contacts\";\nimport AuthContext from \"../../context/authentication/authContext\";\n\nconst Home = () => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated } = authContext;\n\n  useEffect(() => {\n    // keep the user info logged in\n    authContext.loadUser();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Fragment>\n      {isAuthenticated ? (\n        <div className=\"home-layout\">\n          <div className=\"add-contact-div\">\n            <ContactForm />\n          </div>\n          <div className=\"my-contacts-div\">\n            <Contacts />\n          </div>\n        </div>\n      ) : (\n        <Fragment>Loading...</Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst About = () => {\n  return <div>About page</div>;\n};\n\nexport default About;\n","// variables used to decide what will be done in the reducer\n// contacts\nexport const CREATE_CONTACT = \"CREATE_CONTACT\";\nexport const READ_CONTACTS = \"READ_CONTACTS\";\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\nexport const FILTER_CONTACTS = \"FILTER_CONTACTS\";\nexport const CLEAR_CONTACTS = \"CLEAR_CONTACTS\";\nexport const SET_CURRENT = \"SET_CURRENT\";\nexport const CLEAR_CURRENT = \"CLEAR_CURRENT\";\nexport const CLEAR_FILTER = \"CLEAR_FILTER\";\nexport const CONTACT_ERROR = \"CONTACT_ERROR\";\n\n// alert\nexport const SET_ALERT = \"SET_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\n\n// authentication\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\n","import {\n  CREATE_CONTACT,\n  READ_CONTACTS,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  DELETE_CONTACT,\n  CLEAR_CONTACTS,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n} from \"../types\";\n\n// reducer\nconst contactReducer = (state, action) => {\n  switch (action.type) {\n    // create contact\n    case CREATE_CONTACT:\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n        loading: false,\n      };\n\n    // read contact\n    case READ_CONTACTS:\n      return { ...state, contacts: action.payload, loading: false };\n\n    // update contact\n    case SET_CURRENT:\n      return { ...state, current: action.payload };\n    case CLEAR_CURRENT:\n      return { ...state, current: null };\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        // if the id of current matches existing contact, update value, else old value\n        contacts: state.contacts.map(contact =>\n          contact._id === action.payload._id ? action.payload : contact\n        ),\n        loading: false,\n      };\n\n    // delete contact\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact._id !== action.payload\n        ),\n        loading: false,\n      };\n\n    // clear contacts\n    case CLEAR_CONTACTS:\n      return {\n        ...state,\n        contacts: [],\n        filtered: null,\n        error: null,\n        current: null,\n      };\n\n    // search contacts\n    case FILTER_CONTACTS:\n      return {\n        ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, `gi`);\n          return contact.name.match(regex) || contact.phone.match(regex);\n        }),\n      };\n    case CLEAR_FILTER:\n      return { ...state, filtered: null };\n\n    // get error message\n    case CONTACT_ERROR:\n      return { ...state, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default contactReducer;\n","import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport {\n  CREATE_CONTACT,\n  READ_CONTACTS,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  DELETE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n} from \"../types\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    // temporary object to store the edits\n    current: null,\n    // search term value\n    filtered: null,\n    // error message\n    error: null,\n    // loading\n    loading: true,\n  };\n\n  // dispatching functions\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  // create contact\n  const createContact = async contact => {\n    // define header details\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\n    try {\n      // connect to api post\n      const response = await axios.post(\"/api/contacts\", contact, config);\n      // add the contact\n      dispatch({ type: CREATE_CONTACT, payload: response.data });\n    } catch (err) {\n      // if registration failed\n      dispatch({ type: CONTACT_ERROR, payload: err.response.data.message });\n    }\n  };\n\n  // read contacts\n  const readContacts = async () => {\n    // try to fetch contact\n    try {\n      // connect to api get\n      const response = await axios.get(\"/api/contacts\");\n      // get the contacts\n      dispatch({ type: READ_CONTACTS, payload: response.data });\n    } catch (err) {\n      // if registration failed\n      dispatch({ type: CONTACT_ERROR, payload: err.response.data.message });\n    }\n  };\n\n  // update contact - 1 - defines the changes to the current contact\n  const setCurrentContact = contact =>\n    dispatch({ type: SET_CURRENT, payload: contact });\n  // update contact - 2 - clear the edit field after changes are made\n  const clearCurrentContact = () => dispatch({ type: CLEAR_CURRENT });\n\n  // update contact - 3 - actually update the contact\n  const updateContact = async contact => {\n    // define header details\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\n    try {\n      // connect to api post\n      const response = await axios.put(\n        `/api/contacts/${contact._id}`,\n        contact,\n        config\n      );\n      // update the contact\n      dispatch({ type: UPDATE_CONTACT, payload: response.data });\n    } catch (err) {\n      // if there is error\n      dispatch({ type: CONTACT_ERROR, payload: err.response.data.message });\n    }\n  };\n\n  // delete contact - cruD\n  const deleteContact = async id => {\n    try {\n      // connect to api delete\n      await axios.delete(`/api/contacts/${id}`);\n      // delete the contact\n      dispatch({ type: DELETE_CONTACT, payload: id });\n    } catch (err) {\n      // in case of error\n      dispatch({ type: CONTACT_ERROR, payload: err.response.data.message });\n    }\n  };\n\n  // clear contacts\n  const clearContacts = () => dispatch({ type: CLEAR_CONTACTS });\n\n  // filter contacts\n  const searchContact = text =>\n    dispatch({ type: FILTER_CONTACTS, payload: text });\n  // clear filters\n  const clearContactSearch = () => dispatch({ type: CLEAR_FILTER });\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        loading: state.loading,\n        createContact,\n        readContacts,\n        setCurrentContact,\n        clearCurrentContact,\n        updateContact,\n        deleteContact,\n        clearContacts,\n        searchContact,\n        clearContactSearch,\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from \"../types\";\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    // bring in user profile data\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload,\n      };\n    // keep token to stay logged in\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    // remove token\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        error: action.payload,\n      };\n    // remove the errors\n    case CLEAR_ERRORS:\n      return { ...state, error: null };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import axios from \"axios\";\n\nconst setAuthenticationToken = token => {\n  token\n    ? (axios.defaults.headers.common[\"x-auth-token\"] = token)\n    : delete axios.defaults.headers.common[\"x-auth-token\"];\n};\n\nexport default setAuthenticationToken;\n","import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport AuthContext from \"./authContext\";\nimport authReducer from \"./authReducer\";\nimport setAuthenticationToken from \"../../utilities/setAuthenticationToken\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from \"../types\";\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    user: null,\n    error: null,\n    loading: true,\n  };\n\n  // dispatching functions\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // load user data\n  const loadUser = async () => {\n    // load token into global headers\n    setAuthenticationToken(localStorage.token);\n    try {\n      const response = await axios.get(\"/api/auth\");\n      // if user exists\n      dispatch({ type: USER_LOADED, payload: response.data });\n    } catch (err) {\n      dispatch({ type: AUTH_ERROR });\n    }\n  };\n\n  // register user\n  const register = async formData => {\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\n    try {\n      const response = await axios.post(\"/api/users\", formData, config);\n      // if registration successful\n      dispatch({ type: REGISTER_SUCCESS, payload: response.data });\n      // load user data\n      loadUser();\n    } catch (err) {\n      // if registration failed\n      dispatch({ type: REGISTER_FAIL, payload: err.response.data.message });\n    }\n  };\n\n  // login\n  const login = async formData => {\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\n    try {\n      const response = await axios.post(\"/api/auth\", formData, config);\n      // if registration successful\n      dispatch({ type: LOGIN_SUCCESS, payload: response.data });\n      // load user data\n      loadUser();\n    } catch (err) {\n      // if registration failed\n      dispatch({ type: LOGIN_FAIL, payload: err.response.data.message });\n    }\n  };\n\n  // logout\n  const logout = () => dispatch({ type: LOGOUT });\n\n  // clear errors\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        loadUser,\n        register,\n        login,\n        logout,\n        clearErrors,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n","import { createContext } from \"react\";\n\nconst AlertContext = createContext();\n\nexport default AlertContext;\n","import React, { useContext } from \"react\";\nimport AlertContext from \"../../context/alert/alertContext\";\n\nconst Alerts = () => {\n  const alertContext = useContext(AlertContext);\n\n  return (\n    alertContext.alerts.length > 0 &&\n    alertContext.alerts.map(alert => (\n      <div>\n        <i className=\"fas fa-info-circle\" />\n        &nbsp;\n        {alert.message}\n      </div>\n    ))\n  );\n};\n\nexport default Alerts;\n","import React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport AlertContext from \"../../context/alert/alertContext\";\nimport AuthContext from \"../../context/authentication/authContext\";\nimport Alerts from \"../alert/Alerts\";\n\nconst Register = props => {\n  // import authentication functions\n  const authContext = useContext(AuthContext);\n  const { register, error, clearErrors, isAuthenticated } = authContext;\n  // import alert functions\n  const alertContext = useContext(AlertContext);\n  const { setAlert } = alertContext;\n\n  // functions on changes\n  useEffect(() => {\n    // redirect to home page if authenticated\n    if (isAuthenticated) props.history.push(\"/\");\n    // if user already exists\n    if (error === \"This user already exists\") {\n      setAlert(error, \"danger\");\n      clearErrors();\n    }\n    // eslint-disable-next-line\n  }, [error, isAuthenticated, props.history]);\n\n  // set default input value\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n  });\n  const { name, email, password, passwordConfirmation } = user;\n\n  // update temporary value\n  const onChange = change =>\n    setUser({ ...user, [change.target.name]: change.target.value });\n\n  // register the user\n  const onSubmit = submit => {\n    submit.preventDefault();\n    // check if input is correct\n    if (password !== passwordConfirmation) {\n      setAlert(\"Passwords don't match\", \"danger\");\n    }\n    // register user\n    else register({ name, email, password });\n  };\n\n  return (\n    <Fragment>\n      <form className=\"registration-form\" onSubmit={onSubmit}>\n        <h2>Register with us</h2>\n        <input\n          className=\"input-field registration-field\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={onChange}\n          placeholder=\"Name\"\n          required\n        />\n        <input\n          className=\"input-field registration-field\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={onChange}\n          placeholder=\"Email\"\n          required\n        />\n        {/* password fields */}\n        <input\n          className=\"input-field registration-field\"\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={onChange}\n          placeholder=\"Enter a password\"\n          minLength=\"8\"\n          required\n        />\n        <input\n          className=\"input-field registration-field\"\n          type=\"password\"\n          name=\"passwordConfirmation\"\n          value={passwordConfirmation}\n          onChange={onChange}\n          placeholder=\"Confirm your password\"\n          minLength=\"8\"\n          required\n        />\n        <input\n          className=\"button button-submit registration-field\"\n          type=\"submit\"\n          value=\"Register\"\n        />\n        <Alerts />\n      </form>\n      <br />\n      <p className=\"signature\">This website was developed by <a href=\"https://saad-shaikh-portfolio.netlify.app/\" target=\"_blank\">Saad Shaikh</a></p>\n    </Fragment>\n  );\n};\n\nexport default Register;\n","import React, { useState, useEffect, useContext, Fragment } from \"react\";\nimport Alerts from \"../alert/Alerts\";\nimport AuthContext from \"../../context/authentication/authContext\";\nimport AlertContext from \"../../context/alert/alertContext\";\n\nconst Login = props => {\n  // import authentication functions\n  const authContext = useContext(AuthContext);\n  const { login, error, clearErrors, isAuthenticated } = authContext;\n  // import alert functions\n  const alertContext = useContext(AlertContext);\n  const { setAlert } = alertContext;\n\n  // functions on changes\n  useEffect(() => {\n    // redirect to home page if authenticated\n    if (isAuthenticated) props.history.push(\"/\");\n    // if user already exists\n    if (error === \"This email address is not registered\") {\n      setAlert(error, \"danger\");\n      clearErrors();\n    }\n    // eslint-disable-next-line\n  }, [error, isAuthenticated, props.history]);\n\n  // set default input values\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const { email, password } = user;\n\n  // on text input\n  const onChange = change =>\n    setUser({ ...user, [change.target.name]: change.target.value });\n\n  // login attempt\n  const onSubmit = submit => {\n    submit.preventDefault();\n    login({ email, password });\n  };\n\n  return (\n    <Fragment>\n      <form className=\"registration-form\" onSubmit={onSubmit}>\n        <h2>Login</h2>\n        <Alerts />\n        <input\n          className=\"input-field registration-field\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={onChange}\n          placeholder=\"Email\"\n          required\n        />\n        <input\n          className=\"input-field registration-field\"\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={onChange}\n          placeholder=\"Enter a password\"\n          required\n        />\n        <input\n          className=\"button button-submit registration-field\"\n          type=\"submit\"\n          value=\"Login\"\n        />\n      </form>\n      <br />\n      <p className=\"signature\">This website was developed by <a href=\"https://saad-shaikh-portfolio.netlify.app/\" target=\"_blank\">Saad Shaikh</a></p>\n    </Fragment>\n  );\n};\n\nexport default Login;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthContext from \"../context/authentication/authContext\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated, loading } = authContext;\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        !isAuthenticated && !loading ? (\n          <Redirect to=\"/login\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import { SET_ALERT, REMOVE_ALERT } from \"../types\";\n\nconst alertReducer = (state, action) => {\n  switch (action.type) {\n    case SET_ALERT:\n      return [...state, action.payload];\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default alertReducer;\n","import React, { useReducer } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport AlertContext from \"./alertContext\";\nimport alertReducer from \"./alertReducer\";\nimport { SET_ALERT, REMOVE_ALERT } from \"../types\";\n\nconst AlertState = props => {\n  const initialState = [];\n  // dispatching functions\n  const [state, dispatch] = useReducer(alertReducer, initialState);\n  // SET_ALERT\n  const setAlert = (message, type) => {\n    const id = uuid.v4;\n    dispatch({ type: SET_ALERT, payload: { message, type, id } });\n    setTimeout(() => {\n      dispatch({ type: REMOVE_ALERT, payload: id });\n    }, 5000);\n  };\n\n  return (\n    <AlertContext.Provider\n      value={{\n        alerts: state,\n        setAlert,\n      }}\n    >\n      {props.children}\n    </AlertContext.Provider>\n  );\n};\n\nexport default AlertState;\n","import \"./App.css\";\nimport React, { Fragment } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/pages/Home\";\nimport About from \"./components/pages/About\";\nimport ContactState from \"./context/contact/ContactState\";\nimport AuthState from \"./context/authentication/AuthState\";\nimport Register from \"./components/authentication/Register\";\nimport Login from \"./components/authentication/Login\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport AlertState from \"./context/alert/AlertState\";\nimport setAuthenticationToken from \"./utilities/setAuthenticationToken\";\n\nsetAuthenticationToken(localStorage.token);\n\nconst App = () => {\n  return (\n    <AuthState>\n      <ContactState>\n        <AlertState>\n          <Router>\n            <Fragment>\n              <Navbar />\n              <Switch>\n                <PrivateRoute exact path=\"/\" component={Home} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/register\" component={Register} />\n                <Route exact path=\"/login\" component={Login} />\n              </Switch>\n            </Fragment>\n          </Router>\n        </AlertState>\n      </ContactState>\n    </AuthState>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}