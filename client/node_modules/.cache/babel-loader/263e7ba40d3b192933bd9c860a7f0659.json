{"ast":null,"code":"var _jsxFileName = \"/home/saad/Desktop/udemy/contact-keeper/client/src/components/authentication/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport AlertContext from \"../../context/alert/alertContext\";\nimport AuthContext from \"../../context/authentication/authContext\";\nimport Alerts from \"../alert/Alerts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  // import authentication functions\n  const authContext = useContext(AuthContext);\n  const {\n    register,\n    error,\n    clearErrors,\n    isAuthenticated\n  } = authContext; // import alert functions\n\n  const alertContext = useContext(AlertContext);\n  const {\n    setAlert\n  } = alertContext; // default value\n\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\"\n  });\n  const {\n    name,\n    email,\n    password,\n    passwordConfirmation\n  } = user; // if the user already exists\n\n  useEffect(() => {\n    // redirect to home page if authenticated\n    if (isAuthenticated) props.history.push(`/`);\n\n    if (error === `This user already exists`) {\n      setAlert(error, `danger`);\n      clearErrors();\n    }\n  }, [error]); // update temporary value\n\n  const onChange = change => setUser({ ...user,\n    [change.target.name]: change.target.value\n  }); // register the user\n\n\n  const onSubmit = submit => {\n    submit.preventDefault(); // check if input is correct\n\n    if (password !== passwordConfirmation) {\n      setAlert(`Passwords don't match`, `danger`);\n    } // register user\n\n\n    register({\n      name,\n      email,\n      password\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"registration-form\",\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register with us\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-field registration-field\",\n      type: \"text\",\n      name: \"name\",\n      value: name,\n      onChange: onChange,\n      placeholder: \"Name\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-field registration-field\",\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: onChange,\n      placeholder: \"Email\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-field registration-field\",\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: onChange,\n      placeholder: \"Enter a password\",\n      minLength: \"8\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-field registration-field\",\n      type: \"password\",\n      name: \"passwordConfirmation\",\n      value: passwordConfirmation,\n      onChange: onChange,\n      placeholder: \"Confirm your password\",\n      minLength: \"8\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"button button-submit registration-field\",\n      type: \"submit\",\n      value: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alerts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"WW2fTuCwR+h2+aVQ5pMehQJrp74=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/saad/Desktop/udemy/contact-keeper/client/src/components/authentication/Register.js"],"names":["React","useContext","useEffect","useState","AlertContext","AuthContext","Alerts","Register","authContext","register","error","clearErrors","isAuthenticated","alertContext","setAlert","user","setUser","name","email","password","passwordConfirmation","props","history","push","onChange","change","target","value","onSubmit","submit","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB;AACA,QAAMC,WAAW,GAAGP,UAAU,CAACI,WAAD,CAA9B;AACA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA;AAAhC,MAAoDJ,WAA1D,CAHqB,CAIrB;;AACA,QAAMK,YAAY,GAAGZ,UAAU,CAACG,YAAD,CAA/B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAeD,YAArB,CANqB,CAOrB;;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC;AAC/Bc,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,QAAQ,EAAE,EAHqB;AAI/BC,IAAAA,oBAAoB,EAAE;AAJS,GAAD,CAAhC;AAMA,QAAM;AAAEH,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA;AAAzB,MAAkDL,IAAxD,CAdqB,CAgBrB;;AACAb,EAAAA,SAAS,CAAC,MAAM;AAClB;AACA,QAAGU,eAAH,EAAmBS,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAoB,GAApB;;AAEf,QAAIb,KAAK,KAAM,0BAAf,EAA0C;AACxCI,MAAAA,QAAQ,CAACJ,KAAD,EAAS,QAAT,CAAR;AACAC,MAAAA,WAAW;AACZ;AACF,GARQ,EAQN,CAACD,KAAD,CARM,CAAT,CAjBqB,CA0BrB;;AACA,QAAMc,QAAQ,GAAGC,MAAM,IACrBT,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,KAACU,MAAM,CAACC,MAAP,CAAcT,IAAf,GAAsBQ,MAAM,CAACC,MAAP,CAAcC;AAA/C,GAAD,CADT,CA3BqB,CA8BrB;;;AACA,QAAMC,QAAQ,GAAGC,MAAM,IAAI;AACzBA,IAAAA,MAAM,CAACC,cAAP,GADyB,CAEzB;;AACA,QAAIX,QAAQ,KAAKC,oBAAjB,EAAuC;AACrCN,MAAAA,QAAQ,CAAE,uBAAF,EAA2B,QAA3B,CAAR;AACD,KALwB,CAMzB;;;AACAL,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAAD,CAAR;AACD,GARD;;AAUA,sBACE;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAoC,IAAA,QAAQ,EAAES,QAA9C;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,SAAS,EAAC,gCADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAEX,IAJT;AAKE,MAAA,QAAQ,EAAEO,QALZ;AAME,MAAA,WAAW,EAAC,MANd;AAOE,MAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE;AACE,MAAA,SAAS,EAAC,gCADZ;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,KAAK,EAAEN,KAJT;AAKE,MAAA,QAAQ,EAAEM,QALZ;AAME,MAAA,WAAW,EAAC,OANd;AAOE,MAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,YAXF,eAqBE;AACE,MAAA,SAAS,EAAC,gCADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,KAAK,EAAEL,QAJT;AAKE,MAAA,QAAQ,EAAEK,QALZ;AAME,MAAA,WAAW,EAAC,kBANd;AAOE,MAAA,SAAS,EAAC,GAPZ;AAQE,MAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,YArBF,eA+BE;AACE,MAAA,SAAS,EAAC,gCADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,IAAI,EAAC,sBAHP;AAIE,MAAA,KAAK,EAAEJ,oBAJT;AAKE,MAAA,QAAQ,EAAEI,QALZ;AAME,MAAA,WAAW,EAAC,uBANd;AAOE,MAAA,SAAS,EAAC,GAPZ;AAQE,MAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,YA/BF,eAyCE;AACE,MAAA,SAAS,EAAC,yCADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,YAzCF,eA8CE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YA9CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD,CA3FD;;GAAMjB,Q;;KAAAA,Q;AA6FN,eAAeA,QAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport AlertContext from \"../../context/alert/alertContext\";\nimport AuthContext from \"../../context/authentication/authContext\";\nimport Alerts from \"../alert/Alerts\";\n\nconst Register = () => {\n  // import authentication functions\n  const authContext = useContext(AuthContext);\n  const { register, error, clearErrors, isAuthenticated } = authContext;\n  // import alert functions\n  const alertContext = useContext(AlertContext);\n  const { setAlert } = alertContext;\n  // default value\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n  });\n  const { name, email, password, passwordConfirmation } = user;\n\n  // if the user already exists\n  useEffect(() => {\n// redirect to home page if authenticated\nif(isAuthenticated)props.history.push(`/`)\n\n    if (error === `This user already exists`) {\n      setAlert(error, `danger`);\n      clearErrors();\n    }\n  }, [error]);\n  // update temporary value\n  const onChange = change =>\n    setUser({ ...user, [change.target.name]: change.target.value });\n\n  // register the user\n  const onSubmit = submit => {\n    submit.preventDefault();\n    // check if input is correct\n    if (password !== passwordConfirmation) {\n      setAlert(`Passwords don't match`, `danger`);\n    }\n    // register user\n    register({ name, email, password });\n  };\n\n  return (\n    <form className=\"registration-form\" onSubmit={onSubmit}>\n      <h2>Register with us</h2>\n      <input\n        className=\"input-field registration-field\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={onChange}\n        placeholder=\"Name\"\n        required\n      />\n      <input\n        className=\"input-field registration-field\"\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={onChange}\n        placeholder=\"Email\"\n        required\n      />\n      {/* password fields */}\n      <input\n        className=\"input-field registration-field\"\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={onChange}\n        placeholder=\"Enter a password\"\n        minLength=\"8\"\n        required\n      />\n      <input\n        className=\"input-field registration-field\"\n        type=\"password\"\n        name=\"passwordConfirmation\"\n        value={passwordConfirmation}\n        onChange={onChange}\n        placeholder=\"Confirm your password\"\n        minLength=\"8\"\n        required\n      />\n      <input\n        className=\"button button-submit registration-field\"\n        type=\"submit\"\n        value=\"Register\"\n      />\n      <Alerts />\n    </form>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}