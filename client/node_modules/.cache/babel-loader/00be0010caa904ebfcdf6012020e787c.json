{"ast":null,"code":"import React,{Fragment,useContext,useEffect}from\"react\";import ContactContext from\"../../context/contact/contactContext\";import ContactSearch from\"./ContactSearch\";import ContactCard from\"./ContactCard\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Contacts=function Contacts(){// import context\nvar contactContext=useContext(ContactContext);var contacts=contactContext.contacts,filtered=contactContext.filtered,readContacts=contactContext.readContacts,loading=contactContext.loading;// use effect\nuseEffect(function(){readContacts();// eslint-disable-next-line\n},[]);if(contacts!==null&&!contacts.length&&!loading)return/*#__PURE__*/_jsx(\"p\",{className:\"no-contacts\",children:\"You have no contacts\"});return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"My contacts\"}),/*#__PURE__*/_jsx(ContactSearch,{}),/*#__PURE__*/_jsx(\"div\",{className:\"contacts-list\",children:filtered?filtered.map(function(contact){return/*#__PURE__*/_jsx(ContactCard,{contact:contact},contact._id);}):contacts.map(function(contact){return/*#__PURE__*/_jsx(ContactCard,{contact:contact},contact._id);})})]});};export default Contacts;","map":{"version":3,"sources":["/home/saad/Desktop/my-projects/contacts-app/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","ContactContext","ContactSearch","ContactCard","Contacts","contactContext","contacts","filtered","readContacts","loading","length","map","contact","_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB;AACA,GAAMC,CAAAA,cAAc,CAAGN,UAAU,CAACE,cAAD,CAAjC,CACA,GAAQK,CAAAA,QAAR,CAAsDD,cAAtD,CAAQC,QAAR,CAAkBC,QAAlB,CAAsDF,cAAtD,CAAkBE,QAAlB,CAA4BC,YAA5B,CAAsDH,cAAtD,CAA4BG,YAA5B,CAA0CC,OAA1C,CAAsDJ,cAAtD,CAA0CI,OAA1C,CAEA;AACAT,SAAS,CAAC,UAAM,CACdQ,YAAY,GACZ;AACD,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAIF,QAAQ,GAAK,IAAb,EAAqB,CAACA,QAAQ,CAACI,MAA/B,EAAyC,CAACD,OAA9C,CACE,mBAAO,UAAG,SAAS,CAAC,aAAb,kCAAP,CAEF,mBACE,MAAC,QAAD,yBACE,mCADF,cAEE,KAAC,aAAD,IAFF,cAGE,YAAK,SAAS,CAAC,eAAf,UACGF,QAAQ,CACLA,QAAQ,CAACI,GAAT,CAAa,SAAAC,OAAO,qBAClB,KAAC,WAAD,EAA+B,OAAO,CAAEA,OAAxC,EAAkBA,OAAO,CAACC,GAA1B,CADkB,EAApB,CADK,CAILP,QAAQ,CAACK,GAAT,CAAa,SAAAC,OAAO,qBAClB,KAAC,WAAD,EAA+B,OAAO,CAAEA,OAAxC,EAAkBA,OAAO,CAACC,GAA1B,CADkB,EAApB,CALN,EAHF,GADF,CAeD,CA7BD,CA+BA,cAAeT,CAAAA,QAAf","sourcesContent":["import React, { Fragment, useContext, useEffect } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\";\nimport ContactSearch from \"./ContactSearch\";\nimport ContactCard from \"./ContactCard\";\n\nconst Contacts = () => {\n  // import context\n  const contactContext = useContext(ContactContext);\n  const { contacts, filtered, readContacts, loading } = contactContext;\n\n  // use effect\n  useEffect(() => {\n    readContacts();\n    // eslint-disable-next-line\n  }, []);\n\n  if (contacts !== null && !contacts.length && !loading)\n    return <p className=\"no-contacts\">You have no contacts</p>;\n\n  return (\n    <Fragment>\n      <h2>My contacts</h2>\n      <ContactSearch />\n      <div className=\"contacts-list\">\n        {filtered\n          ? filtered.map(contact => (\n              <ContactCard key={contact._id} contact={contact} />\n            ))\n          : contacts.map(contact => (\n              <ContactCard key={contact._id} contact={contact} />\n            ))}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}