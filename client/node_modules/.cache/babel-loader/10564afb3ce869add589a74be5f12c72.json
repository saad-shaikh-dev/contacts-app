{"ast":null,"code":"var _jsxFileName = \"/home/saad/Desktop/udemy/contact-keeper/client/src/context/authentication/AuthState.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport AuthContext from \"./authContext\";\nimport authReducer from \"./authReducer\";\nimport setAuthenticationToken from \"../../utilities/setAuthenticationToken\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    user: null,\n    error: null,\n    loading: true\n  }; // dispatching functions\n\n  const [state, dispatch] = useReducer(authReducer, initialState); // load user data\n\n  const loadUser = async () => {\n    _s();\n\n    useCallback(() => {\n      callback;\n    }, [input]);\n  }; // register user\n\n\n  _s(loadUser, \"epj4qY15NHsef74wNqHIp5fdZmg=\");\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const response = await axios.post(\"/api/users\", formData, config); // if registration successful\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: response.data\n      }); // load user data\n\n      loadUser();\n    } catch (err) {\n      // if registration failed\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.message\n      });\n    }\n  }; // login\n\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const response = await axios.post(\"/api/auth\", formData, config); // if registration successful\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: response.data\n      }); // load user data\n\n      loadUser();\n    } catch (err) {\n      // if registration failed\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.message\n      });\n    }\n  }; // LOGOUT\n  // clear errors\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      loadUser,\n      register,\n      login,\n      clearErrors\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/home/saad/Desktop/udemy/contact-keeper/client/src/context/authentication/AuthState.js"],"names":["React","useReducer","axios","AuthContext","authReducer","setAuthenticationToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","user","error","loading","state","dispatch","loadUser","useCallback","callback","input","register","formData","config","headers","response","post","type","payload","data","err","message","login","clearErrors","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport AuthContext from \"./authContext\";\nimport authReducer from \"./authReducer\";\nimport setAuthenticationToken from \"../../utilities/setAuthenticationToken\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from \"../types\";\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    user: null,\n    error: null,\n    loading: true,\n  };\n  // dispatching functions\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // load user data\n  const loadUser = async () => {\n    useCallback(\n      () => {\n        callback\n      },\n      [input],\n    )\n    \n  };\n  // register user\n  const register = async formData => {\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\n    try {\n      const response = await axios.post(\"/api/users\", formData, config);\n      // if registration successful\n      dispatch({ type: REGISTER_SUCCESS, payload: response.data });\n      // load user data\n      loadUser();\n    } catch (err) {\n      // if registration failed\n      dispatch({ type: REGISTER_FAIL, payload: err.response.data.message });\n    }\n  };\n  // login\n  const login = async formData => {\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\n    try {\n      const response = await axios.post(\"/api/auth\", formData, config);\n      // if registration successful\n      dispatch({ type: LOGIN_SUCCESS, payload: response.data });\n      // load user data\n      loadUser();\n    } catch (err) {\n      // if registration failed\n      dispatch({ type: LOGIN_FAIL, payload: err.response.data.message });\n    }\n  };\n  // LOGOUT\n  // clear errors\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        loadUser,\n        register,\n        login,\n        clearErrors,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}