{"ast":null,"code":"var _jsxFileName = \"/home/saad/Desktop/udemy/contact-keeper/client/src/components/contacts/ContactCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactContext from \"../../context/contact/contactContext\"; // cRUD - Read and Delete contacts, link to Update contact\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactCard = ({\n  contact\n}) => {\n  _s();\n\n  const contactContext = useContext(ContactContext);\n  const {\n    create\n  } = contactContext;\n  const {\n    deleteContact,\n    setCurrentContact,\n    clearCurrentContact\n  } = contactContext;\n  const {\n    id,\n    name,\n    email,\n    phone,\n    type\n  } = contact; //delete method\n\n  const onDelete = () => {\n    deleteContact(id); // clear any updating so deleted contacts cannot be updated\n\n    clearCurrentContact();\n  }; // update method\n\n\n  const onUpdate = () => setCurrentContact(contact);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge \" + (type === \"professional\" ? \"badge-professional\" : \"badge-personal\"),\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"contact-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-envelope-open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), \"\\xA0\\xA0\", email ? /*#__PURE__*/_jsxDEV(Fragment, {\n          children: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n          children: \"There is no email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), \"\\xA0\\xA0\", phone ? /*#__PURE__*/_jsxDEV(Fragment, {\n          children: phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n          children: \"there is no pone number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button-edit\",\n        onClick: onUpdate,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button-delete\",\n        onClick: onDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactCard, \"6ffJmqxeUUv4Q9skTZKiRD1WUuU=\");\n\n_c = ContactCard;\nContactCard.propTypes = {\n  contact: PropTypes.object.isRequired\n};\nexport default ContactCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactCard\");","map":{"version":3,"sources":["/home/saad/Desktop/udemy/contact-keeper/client/src/components/contacts/ContactCard.js"],"names":["React","useContext","Fragment","PropTypes","ContactContext","ContactCard","contact","contactContext","create","deleteContact","setCurrentContact","clearCurrentContact","id","name","email","phone","type","onDelete","onUpdate","propTypes","object","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,sCAA3B,C,CAEA;;;;AACA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACnC,QAAMC,cAAc,GAAGN,UAAU,CAACG,cAAD,CAAjC;AACA,QAAM;AAACI,IAAAA;AAAD,MAAWD,cAAjB;AACA,QAAM;AAAEE,IAAAA,aAAF;AAAiBC,IAAAA,iBAAjB;AAAoCC,IAAAA;AAApC,MACJJ,cADF;AAEA,QAAM;AAAEK,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA;AAA1B,MAAmCV,OAAzC,CALmC,CAMnC;;AACA,QAAMW,QAAQ,GAAG,MAAM;AACrBR,IAAAA,aAAa,CAACG,EAAD,CAAb,CADqB,CAErB;;AACAD,IAAAA,mBAAmB;AACpB,GAJD,CAPmC,CAYnC;;;AACA,QAAMO,QAAQ,GAAG,MAAMR,iBAAiB,CAACJ,OAAD,CAAxC;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAA,iBACGO,IADH,EACS,GADT,eAEE;AACE,QAAA,SAAS,EACP,YACCG,IAAI,KAAK,cAAT,GAA0B,oBAA1B,GAAiD,gBADlD,CAFJ;AAAA,kBAMGA;AANH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA,8BACE;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,cAEGF,KAAK,gBACJ,QAAC,QAAD;AAAA,oBAAWA;AAAX;AAAA;AAAA;AAAA;AAAA,gBADI,gBAGJ,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,cAEGC,KAAK,gBACJ,QAAC,QAAD;AAAA,oBAAWA;AAAX;AAAA;AAAA;AAAA;AAAA,gBADI,gBAGJ,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eA8BE;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAuC,QAAA,OAAO,EAAEG,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAED,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CAvDD;;GAAMZ,W;;KAAAA,W;AAyDNA,WAAW,CAACc,SAAZ,GAAwB;AACtBb,EAAAA,OAAO,EAAEH,SAAS,CAACiB,MAAV,CAAiBC;AADJ,CAAxB;AAIA,eAAehB,WAAf","sourcesContent":["import React, { useContext, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\n// cRUD - Read and Delete contacts, link to Update contact\nconst ContactCard = ({ contact }) => {\n  const contactContext = useContext(ContactContext);\n  const {create} = contactContext;\n  const { deleteContact, setCurrentContact, clearCurrentContact } =\n    contactContext;\n  const { id, name, email, phone, type } = contact;\n  //delete method\n  const onDelete = () => {\n    deleteContact(id);\n    // clear any updating so deleted contacts cannot be updated\n    clearCurrentContact();\n  };\n  // update method\n  const onUpdate = () => setCurrentContact(contact);\n  return (\n    <div className=\"contact-card\">\n      <h3>\n        {name}{\" \"}\n        <span\n          className={\n            \"badge \" +\n            (type === \"professional\" ? \"badge-professional\" : \"badge-personal\")\n          }\n        >\n          {type}\n        </span>\n      </h3>\n      <ul className=\"contact-details\">\n        <li>\n          <i className=\"fas fa-envelope-open\"></i>&nbsp;&nbsp;\n          {email ? (\n            <Fragment>{email}</Fragment>\n          ) : (\n            <Fragment>There is no email</Fragment>\n          )}\n        </li>\n        <li>\n          <i className=\"fas fa-phone\"></i>&nbsp;&nbsp;\n          {phone ? (\n            <Fragment>{phone}</Fragment>\n          ) : (\n            <Fragment>there is no pone number</Fragment>\n          )}\n        </li>\n      </ul>\n      <p>\n        <button className=\"button button-edit\" onClick={onUpdate}>\n          Edit\n        </button>\n        <button className=\"button button-delete\" onClick={onDelete}>\n          Delete\n        </button>\n      </p>\n    </div>\n  );\n};\n\nContactCard.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default ContactCard;\n"]},"metadata":{},"sourceType":"module"}