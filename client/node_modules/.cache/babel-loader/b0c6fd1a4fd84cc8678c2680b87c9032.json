{"ast":null,"code":"import _defineProperty from\"/home/saad/Desktop/my-projects/contacts-app/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/saad/Desktop/my-projects/contacts-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/saad/Desktop/my-projects/contacts-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect,Fragment}from\"react\";import ContactContext from\"../../context/contact/contactContext\";// CrUd - Create and Update contact\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ContactForm=function ContactForm(){var contactContext=useContext(ContactContext);var createContact=contactContext.createContact,clearCurrentContact=contactContext.clearCurrentContact,updateContact=contactContext.updateContact,current=contactContext.current;// add contact details of current contact if edit button is clicked\nuseEffect(function(){current?setContact(current):setContact({name:\"\",email:\"\",phone:\"\",type:\"personal\"});},[contactContext,current]);// default values of the contact form\nvar _useState=useState({name:\"\",email:\"\",phone:\"\",type:\"personal\"}),_useState2=_slicedToArray(_useState,2),contact=_useState2[0],setContact=_useState2[1];var name=contact.name,email=contact.email,phone=contact.phone,type=contact.type;// add values to temporary object\nvar onChange=function onChange(change){return setContact(_objectSpread(_objectSpread({},contact),{},_defineProperty({},change.target.name,change.target.value)));};// if submit button is clicked\nvar onSubmit=function onSubmit(submit){submit.preventDefault();// choose weather to create or update a contact\n!current?createContact(contact):updateContact(contact);// revert form to default values\nclearCurrentContact();};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"a\",{className:\"create-contact-link\",href:\"#contact-form\",children:/*#__PURE__*/_jsx(\"button\",{className:\"create-contact-button\",id:\"create-contact-button\",children:\"+\"})}),/*#__PURE__*/_jsxs(\"form\",{className:\"contact-form\",id:\"contact-form\",onSubmit:onSubmit/* ref={(ref) => {\n          inputEl.current = ref;\n        }} */,children:[/*#__PURE__*/_jsx(\"h2\",{children:current?\"Update contact\":\"Create contact\"}),/*#__PURE__*/_jsx(\"input\",{className:\"input-field\",type:\"text\",name:\"name\",value:name,onChange:onChange,placeholder:\"Name\",required:true}),/*#__PURE__*/_jsx(\"input\",{className:\"input-field\",type:\"email\",name:\"email\",value:email,onChange:onChange,placeholder:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{className:\"input-field\",minLength:\"8\",maxLength:\"8\",type:\"phone\",name:\"phone\",value:phone,onChange:onChange,placeholder:\"Phone\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Contact type\"}),/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"type\",value:\"personal\",checked:type===\"personal\",onChange:onChange}),\"\\xA0 Personal \\xA0\",/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"type\",value:\"work\",checked:type===\"work\",onChange:onChange}),\"\\xA0 Work\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{className:\"button button-submit\",type:\"submit\",value:current?\"Update contact\":\"Create contact\"}),/*#__PURE__*/_jsx(\"a\",{href:\"#create-contact-button\",className:\"close-modal\",onClick:clearCurrentContact,children:\"x\"})]})]})]});};export default ContactForm;","map":{"version":3,"sources":["/home/saad/Desktop/my-projects/contacts-app/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","Fragment","ContactContext","ContactForm","contactContext","createContact","clearCurrentContact","updateContact","current","setContact","name","email","phone","type","contact","onChange","change","target","value","onSubmit","submit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, Fragment } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\n// CrUd - Create and Update contact\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n  const { createContact, clearCurrentContact, updateContact, current } =\n    contactContext;\n  // add contact details of current contact if edit button is clicked\n  useEffect(() => {\n    current\n      ? setContact(current)\n      : setContact({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        type: \"personal\",\n      });\n  }, [contactContext, current]);\n\n  // default values of the contact form\n  const [contact, setContact] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    type: \"personal\",\n  });\n  const { name, email, phone, type } = contact;\n\n  // add values to temporary object\n  const onChange = change =>\n    setContact({ ...contact, [change.target.name]: change.target.value });\n\n  // if submit button is clicked\n  const onSubmit = submit => {\n    submit.preventDefault();\n    // choose weather to create or update a contact\n    !current ? createContact(contact) : updateContact(contact);\n    // revert form to default values\n    clearCurrentContact();\n  };\n\n  return (\n    <Fragment>\n      <a className=\"create-contact-link\" href=\"#contact-form\">\n        <button className=\"create-contact-button\" id=\"create-contact-button\">\n          +\n        </button>\n      </a>\n\n      <form\n        className=\"contact-form\"\n        id=\"contact-form\"\n        onSubmit={onSubmit} /* ref={(ref) => {\n          inputEl.current = ref;\n        }} */\n      >\n        <h2>{current ? \"Update contact\" : \"Create contact\"}</h2>\n        {/* input fields */}\n        <input\n          className=\"input-field\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={onChange}\n          placeholder=\"Name\"\n          required\n        />\n        <input\n          className=\"input-field\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={onChange}\n          placeholder=\"Email\"\n        />\n        <input\n          className=\"input-field\"\n          minLength=\"8\"\n          maxLength=\"8\"\n          type=\"phone\"\n          name=\"phone\"\n          value={phone}\n          onChange={onChange}\n          placeholder=\"Phone\"\n        />\n        {/* personal or work check box */}\n        <div>\n          <h3>Contact type</h3>\n          <input\n            type=\"radio\"\n            name=\"type\"\n            value=\"personal\"\n            checked={type === \"personal\"}\n            onChange={onChange}\n          />\n          &nbsp; Personal &nbsp;\n          <input\n            type=\"radio\"\n            name=\"type\"\n            value=\"work\"\n            checked={type === \"work\"}\n            onChange={onChange}\n          />\n          &nbsp; Work\n        </div>\n        {/* submit and clear button */}\n        <div>\n          <input\n            className=\"button button-submit\"\n            type=\"submit\"\n            value={current ? \"Update contact\" : \"Create contact\"}\n          />\n          <a\n            href=\"#create-contact-button\"\n            className=\"close-modal\"\n            onClick={clearCurrentContact}\n          >\n            x\n          </a>\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}