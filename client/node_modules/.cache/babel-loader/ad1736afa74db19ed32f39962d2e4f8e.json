{"ast":null,"code":"var _jsxFileName = \"/home/saad/Desktop/udemy/contact-keeper/client/src/context/auth/AuthState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport AuthContext from \"./authContext\";\nimport authReducer from \"./authReducer\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: localStorage.getItem(`token`),\n    isAuthenticated: null,\n    user: null,\n    error: null\n  }; // dispatching functions\n\n  const [state, dispatch] = useReducer(authReducer, initialState); // load user\n\n  const loadUser = async () => {\n    // load token into global headers\n    try {\n      const response = await axios;\n    } catch (err) {}\n  }; // register user\n\n\n  const register = async FormData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const response = await axios.post(\"/api/users\", FormData, config); // if registration successful\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: response.data\n      });\n    } catch (err) {\n      // if registration failed\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.message\n      });\n    }\n  }; // AUTH_ERROR\n  // LOGIN_SUCCESS\n  // LOGIN_FAIL\n  // LOGOUT\n  // clear errors\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      user: state.user,\n      error: state.error,\n      register,\n      clearErrors\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/home/saad/Desktop/udemy/contact-keeper/client/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","AuthContext","authReducer","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","user","error","state","dispatch","loadUser","response","err","register","FormData","config","headers","post","type","payload","data","message","clearErrors","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,YARF,QASO,UATP;;;AAWA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AACzB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAsB,OAAtB,CADY;AAEnBC,IAAAA,eAAe,EAAE,IAFE;AAGnBC,IAAAA,IAAI,EAAE,IAHa;AAInBC,IAAAA,KAAK,EAAE;AAJY,GAArB,CADyB,CAOzB;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,UAAU,CAACG,WAAD,EAAcW,YAAd,CAApC,CARyB,CAUzB;;AACA,QAAMS,QAAQ,GAAG,YAAY;AAC3B;AAEA,QAAI;AACF,YAAMC,QAAQ,GAAC,MAAMvB,KAArB;AACD,KAFD,CAEE,OAAOwB,GAAP,EAAY,CAEb;AACF,GARD,CAXyB,CAoBzB;;;AACA,QAAMC,QAAQ,GAAG,MAAMC,QAAN,IAAkB;AACjC,UAAMC,MAAM,GAAG;AAAEC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAAX,KAAf;;AACA,QAAI;AACF,YAAML,QAAQ,GAAG,MAAMvB,KAAK,CAAC6B,IAAN,CAAW,YAAX,EAAyBH,QAAzB,EAAmCC,MAAnC,CAAvB,CADE,CAEF;;AACAN,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE3B,gBAAR;AAA0B4B,QAAAA,OAAO,EAAER,QAAQ,CAACS;AAA5C,OAAD,CAAR;AACD,KAJD,CAIE,OAAOR,GAAP,EAAY;AACZ;AACAH,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE1B,aAAR;AAAuB2B,QAAAA,OAAO,EAAEP,GAAG,CAACD,QAAJ,CAAaS,IAAb,CAAkBC;AAAlD,OAAD,CAAR;AACD;AACF,GAVD,CArByB,CAgCzB;AACA;AACA;AACA;AACA;;;AACA,QAAMC,WAAW,GAAG,MAAMb,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAEpB;AAAR,GAAD,CAAlC;;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,KAAK,EAAEM,KAAK,CAACN,KADR;AAELG,MAAAA,eAAe,EAAEG,KAAK,CAACH,eAFlB;AAGLC,MAAAA,IAAI,EAAEE,KAAK,CAACF,IAHP;AAILC,MAAAA,KAAK,EAAEC,KAAK,CAACD,KAJR;AAKLM,MAAAA,QALK;AAMLS,MAAAA;AANK,KADT;AAAA,cAUGtB,KAAK,CAACuB;AAVT;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CArDD;;GAAMxB,S;;KAAAA,S;AAuDN,eAAeA,SAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport AuthContext from \"./authContext\";\nimport authReducer from \"./authReducer\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from \"../types\";\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem(`token`),\n    isAuthenticated: null,\n    user: null,\n    error: null,\n  };\n  // dispatching functions\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // load user\n  const loadUser = async () => {\n    // load token into global headers\n\n    try {\n      const response=await axios\n    } catch (err) {\n      \n    }\n  };\n  // register user\n  const register = async FormData => {\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\n    try {\n      const response = await axios.post(\"/api/users\", FormData, config);\n      // if registration successful\n      dispatch({ type: REGISTER_SUCCESS, payload: response.data });\n    } catch (err) {\n      // if registration failed\n      dispatch({ type: REGISTER_FAIL, payload: err.response.data.message });\n    }\n  };\n  // AUTH_ERROR\n  // LOGIN_SUCCESS\n  // LOGIN_FAIL\n  // LOGOUT\n  // clear errors\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        user: state.user,\n        error: state.error,\n        register,\n        clearErrors,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}