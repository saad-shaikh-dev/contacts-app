{"ast":null,"code":"import React,{useContext,Fragment}from\"react\";import ContactContext from\"../../context/contact/contactContext\";// cRUD - Read and Delete contacts, link to Update contact\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ContactCard=function ContactCard(_ref){var contact=_ref.contact;var contactContext=useContext(ContactContext);var deleteContact=contactContext.deleteContact,setCurrentContact=contactContext.setCurrentContact,clearCurrentContact=contactContext.clearCurrentContact,clearContactSearch=contactContext.clearContactSearch;var _id=contact._id,name=contact.name,email=contact.email,phone=contact.phone,type=contact.type;// update method\nvar onUpdate=function onUpdate(){return setCurrentContact(contact);};//delete method\nvar onDelete=function onDelete(){deleteContact(_id);// clear any updating so deleted contacts cannot be updated\nclearCurrentContact();clearContactSearch();};return/*#__PURE__*/_jsxs(\"div\",{className:\"contact-card\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[name,/*#__PURE__*/_jsx(\"span\",{className:\"badge \"+(type===\"work\"?\"badge-work\":\"badge-personal\"),children:type})]}),/*#__PURE__*/_jsxs(\"ul\",{className:\"contact-details\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-envelope-open\"}),\"\\xA0\\xA0\",email?/*#__PURE__*/_jsx(Fragment,{children:email}):/*#__PURE__*/_jsx(Fragment,{children:\"No email\"})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-phone\"}),\"\\xA0\\xA0\",phone?/*#__PURE__*/_jsx(Fragment,{children:phone}):/*#__PURE__*/_jsx(Fragment,{children:\"No phone number\"})]})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"a\",{href:\"#contact-form\",children:/*#__PURE__*/_jsx(\"button\",{className:\"button button-edit\",onClick:onUpdate,children:\"Edit\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"button button-delete\",onClick:onDelete,children:\"Delete\"})]})]});};export default ContactCard;","map":{"version":3,"sources":["/home/saad/Desktop/my-projects/contacts-app/client/src/components/contacts/ContactCard.js"],"names":["React","useContext","Fragment","ContactContext","ContactCard","contact","contactContext","deleteContact","setCurrentContact","clearCurrentContact","clearContactSearch","_id","name","email","phone","type","onUpdate","onDelete"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CAEA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CAEA;wFACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACnC,GAAMC,CAAAA,cAAc,CAAGL,UAAU,CAACE,cAAD,CAAjC,CACA,GACEI,CAAAA,aADF,CAKID,cALJ,CACEC,aADF,CAEEC,iBAFF,CAKIF,cALJ,CAEEE,iBAFF,CAGEC,mBAHF,CAKIH,cALJ,CAGEG,mBAHF,CAIEC,kBAJF,CAKIJ,cALJ,CAIEI,kBAJF,CAMA,GAAQC,CAAAA,GAAR,CAA0CN,OAA1C,CAAQM,GAAR,CAAaC,IAAb,CAA0CP,OAA1C,CAAaO,IAAb,CAAmBC,KAAnB,CAA0CR,OAA1C,CAAmBQ,KAAnB,CAA0BC,KAA1B,CAA0CT,OAA1C,CAA0BS,KAA1B,CAAiCC,IAAjC,CAA0CV,OAA1C,CAAiCU,IAAjC,CAEA;AACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SAAMR,CAAAA,iBAAiB,CAACH,OAAD,CAAvB,EAAjB,CACA;AACA,GAAMY,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrBV,aAAa,CAACI,GAAD,CAAb,CACA;AACAF,mBAAmB,GACnBC,kBAAkB,GACnB,CALD,CAOA,mBACE,aAAK,SAAS,CAAC,cAAf,wBACE,sBACGE,IADH,cAEE,aACE,SAAS,CACP,UACCG,IAAI,GAAK,MAAT,CAAkB,YAAlB,CAAiC,gBADlC,CAFJ,UAMGA,IANH,EAFF,GADF,cAYE,YAAI,SAAS,CAAC,iBAAd,wBACE,mCACE,UAAG,SAAS,CAAC,sBAAb,EADF,YAEGF,KAAK,cAAG,KAAC,QAAD,WAAWA,KAAX,EAAH,cAAkC,KAAC,QAAD,uBAF1C,GADF,cAKE,mCACE,UAAG,SAAS,CAAC,cAAb,EADF,YAEGC,KAAK,cACJ,KAAC,QAAD,WAAWA,KAAX,EADI,cAGJ,KAAC,QAAD,8BALJ,GALF,GAZF,cA0BE,kCACE,UAAG,IAAI,CAAC,eAAR,uBACE,eAAQ,SAAS,CAAC,oBAAlB,CAAuC,OAAO,CAAEE,QAAhD,kBADF,EADF,cAME,eAAQ,SAAS,CAAC,sBAAlB,CAAyC,OAAO,CAAEC,QAAlD,oBANF,GA1BF,GADF,CAuCD,CA3DD,CAiEA,cAAeb,CAAAA,WAAf","sourcesContent":["import React, { useContext, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\n// cRUD - Read and Delete contacts, link to Update contact\nconst ContactCard = ({ contact }) => {\n  const contactContext = useContext(ContactContext);\n  const {\n    deleteContact,\n    setCurrentContact,\n    clearCurrentContact,\n    clearContactSearch,\n  } = contactContext;\n  const { _id, name, email, phone, type } = contact;\n\n  // update method\n  const onUpdate = () => setCurrentContact(contact);\n  //delete method\n  const onDelete = () => {\n    deleteContact(_id);\n    // clear any updating so deleted contacts cannot be updated\n    clearCurrentContact();\n    clearContactSearch();\n  };\n\n  return (\n    <div className=\"contact-card\">\n      <h3>\n        {name}\n        <span\n          className={\n            \"badge \" +\n            (type === \"work\" ? \"badge-work\" : \"badge-personal\")\n          }\n        >\n          {type}\n        </span>\n      </h3>\n      <ul className=\"contact-details\">\n        <li>\n          <i className=\"fas fa-envelope-open\"></i>&nbsp;&nbsp;\n          {email ? <Fragment>{email}</Fragment> : <Fragment>No email</Fragment>}\n        </li>\n        <li>\n          <i className=\"fas fa-phone\"></i>&nbsp;&nbsp;\n          {phone ? (\n            <Fragment>{phone}</Fragment>\n          ) : (\n            <Fragment>No phone number</Fragment>\n          )}\n        </li>\n      </ul>\n      <p>\n        <a href=\"#contact-form\">\n          <button className=\"button button-edit\" onClick={onUpdate}>\n            Edit\n          </button>\n        </a>\n        <button className=\"button button-delete\" onClick={onDelete}>\n          Delete\n        </button>\n      </p>\n    </div>\n  );\n};\n\nContactCard.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default ContactCard;\n"]},"metadata":{},"sourceType":"module"}