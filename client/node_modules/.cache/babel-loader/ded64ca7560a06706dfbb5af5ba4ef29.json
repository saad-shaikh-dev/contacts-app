{"ast":null,"code":"import { CREATE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, DELETE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from \"../types\"; // reducer\n\nexport default ((state, action) => {\n  switch (action.type) {\n    //Crud\n    case CREATE_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n    // crUd\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        // if the id of current matches existing contact, update value, else old value\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n      };\n    //cruD\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      };\n    // search contacts\n\n    case FILTER_CONTACTS:\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/saad/Desktop/udemy/contact-keeper/client/src/context/contact/contactReducer.js"],"names":["CREATE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","DELETE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","state","action","type","contacts","payload","current","map","contact","id","filter"],"mappings":"AAAA,SACEA,cADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,cAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,YAPF,QAQO,UARP,C,CAUA;;AACA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAKT,cAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AAAYG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B;AAAtB,OAAP;AACF;;AACA,SAAKV,WAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYK,QAAAA,OAAO,EAAEJ,MAAM,CAACG;AAA5B,OAAP;;AACF,SAAKT,aAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYK,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKT,cAAL;AACE,aAAO,EACL,GAAGI,KADE;AAEL;AACAG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeG,GAAf,CAAmBC,OAAO,IAClCA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OAAP,CAAeI,EAA9B,GAAmCP,MAAM,CAACG,OAA1C,GAAoDG,OAD5C;AAHL,OAAP;AAOF;;AACA,SAAKV,cAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeM,MAAf,CACRF,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OADzB;AAFL,OAAP;AAMF;;AACA,SAAKN,eAAL;AACA;AACE,aAAOE,KAAP;AA5BJ;AA8BD,CA/BD","sourcesContent":["import {\n  CREATE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  DELETE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n} from \"../types\";\n\n// reducer\nexport default (state, action) => {\n  switch (action.type) {\n    //Crud\n    case CREATE_CONTACT:\n      return { ...state, contacts: [...state.contacts, action.payload] };\n    // crUd\n    case SET_CURRENT:\n      return { ...state, current: action.payload };\n    case CLEAR_CURRENT:\n      return { ...state, current: null };\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        // if the id of current matches existing contact, update value, else old value\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id ? action.payload : contact\n        ),\n      };\n    //cruD\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        ),\n      };\n    // search contacts\n    case FILTER_CONTACTS:\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}