{"ast":null,"code":"var _jsxFileName = \"/home/saad/Desktop/udemy/contact-keeper/client/src/components/contacts/ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\"; // CrUd - Create and Update contact\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = () => {\n  _s();\n\n  const contactContext = useContext(ContactContext);\n  const {\n    createContact,\n    current\n  } = contactContext; // add contact details of current contact if edit button is clicked\n\n  useEffect(() => {\n    current !== null ? setContact(current) && contactFormTitle == \"f\" : setContact({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      type: \"personal\"\n    });\n  }, [contactContext, current]); // default values of the contact form\n\n  const [contact, setContact] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    type: \"personal\"\n  });\n  const {\n    name,\n    email,\n    phone,\n    type\n  } = contact; // assign new values to contact object\n\n  const onChange = change => setContact({ ...contact,\n    [change.target.name]: change.target.value\n  }); // submit values to new contact\n\n\n  const onSubmit = submit => {\n    submit.preventDefault(); // add to contacts\n\n    createContact(contact); // revert form to default values\n\n    setContact({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      type: \"personal\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"contact-form\",\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: contactFormTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-field\",\n      type: \"text\",\n      name: \"name\",\n      value: name,\n      onChange: onChange,\n      placeholder: \"Name\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-field\",\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: onChange,\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-field\",\n      type: \"phone\",\n      name: \"phone\",\n      value: phone,\n      onChange: onChange,\n      placeholder: \"Phone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Contact type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"type\",\n        value: \"personal\",\n        checked: type === \"personal\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), \"\\xA0 Personal \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"type\",\n        value: \"professional\",\n        checked: type === \"professional\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), \"\\xA0 Professional\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"button button-submit\",\n        type: \"submit\",\n        value: \"Create contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactForm, \"q3Uxx5f8roOlW0OcHw4CwXGqpS4=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/home/saad/Desktop/udemy/contact-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","createContact","current","setContact","contactFormTitle","name","email","phone","type","contact","onChange","change","target","value","onSubmit","submit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\n// CrUd - Create and Update contact\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n  const { createContact, current } = contactContext;\n  // add contact details of current contact if edit button is clicked\n  useEffect(() => {\n    current !== null\n      ? setContact(current) && contactFormTitle == \"f\"\n      : setContact({\n          name: \"\",\n          email: \"\",\n          phone: \"\",\n          type: \"personal\",\n        });\n  }, [contactContext, current]);\n  // default values of the contact form\n  const [contact, setContact] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    type: \"personal\",\n  });\n  const { name, email, phone, type } = contact;\n  // assign new values to contact object\n  const onChange = change =>\n    setContact({ ...contact, [change.target.name]: change.target.value });\n  // submit values to new contact\n  const onSubmit = submit => {\n    submit.preventDefault();\n    // add to contacts\n    createContact(contact);\n    // revert form to default values\n    setContact({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      type: \"personal\",\n    });\n  };\n\n  return (\n    <form className=\"contact-form\" onSubmit={onSubmit}>\n      <h2>{contactFormTitle}</h2>\n      {/* input fields */}\n      <input\n        className=\"input-field\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={onChange}\n        placeholder=\"Name\"\n        required\n      />\n      <input\n        className=\"input-field\"\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={onChange}\n        placeholder=\"Email\"\n      />\n      <input\n        className=\"input-field\"\n        type=\"phone\"\n        name=\"phone\"\n        value={phone}\n        onChange={onChange}\n        placeholder=\"Phone\"\n      />\n      {/* personal or professional check box */}\n      <div>\n        <h3>Contact type</h3>\n        <input\n          type=\"radio\"\n          name=\"type\"\n          value=\"personal\"\n          checked={type === \"personal\"}\n          onChange={onChange}\n        />\n        &nbsp; Personal &nbsp;\n        <input\n          type=\"radio\"\n          name=\"type\"\n          value=\"professional\"\n          checked={type === \"professional\"}\n          onChange={onChange}\n        />\n        &nbsp; Professional\n      </div>\n      {/* submit button */}\n      <div>\n        <input\n          className=\"button button-submit\"\n          type=\"submit\"\n          value=\"Create contact\"\n        />\n      </div>\n    </form>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}