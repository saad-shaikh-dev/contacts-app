{"ast":null,"code":"var _jsxFileName = \"/home/saad/Desktop/udemy/contact-keeper/client/src/context/contact/ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport { ADD_CONTACT, UPDATE_CONTACT, DELETE_CONTACT, FILTER_CONTACTS, SET_CURRENT, CLEAR_CURRENT, CLEAR_FILTER } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [{\n      id: \"1\",\n      name: \"Yasir\",\n      email: \"yasir@gmail.com\",\n      phone: \"55555555\",\n      type: \"personal\"\n    }, {\n      id: \"2\",\n      name: \"Tahir\",\n      email: \"tahir@hotmail.com\",\n      phone: \"77777777\",\n      type: \"professional\"\n    }, {\n      id: \"3\",\n      name: \"Zubair\",\n      email: \"zubair@hotmail.com\",\n      phone: \"66666666\",\n      type: \"professional\"\n    }]\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); // ADD_CONTACT - Crud\n\n  const createContact = contact => {\n    contact.id = uuid.v4;\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // UPDATE_CONTACT - crUd\n  // DELETE_CONTACT - cruD\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: contact\n    });\n  }; // FILTER_CONTACTS\n  // SET_CURRENT\n  // CLEAR_CURRENT\n  // CLEAR_FILTER\n\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      createContact\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["/home/saad/Desktop/udemy/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","v4","uuid","ContactContext","contactReducer","ADD_CONTACT","UPDATE_CONTACT","DELETE_CONTACT","FILTER_CONTACTS","SET_CURRENT","CLEAR_CURRENT","CLEAR_FILTER","ContactState","props","initialState","contacts","id","name","email","phone","type","state","dispatch","createContact","contact","payload","deleteContact","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,eAJF,EAKEC,WALF,EAMEC,aANF,EAOEC,YAPF,QAQO,UARP;;;AAUA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC5B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,EAAE,EAAE,GADN;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,KAAK,EAAE,iBAHT;AAIEC,MAAAA,KAAK,EAAE,UAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KADQ,EAQR;AACEJ,MAAAA,EAAE,EAAE,GADN;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,KAAK,EAAE,mBAHT;AAIEC,MAAAA,KAAK,EAAE,UAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KARQ,EAeR;AACEJ,MAAAA,EAAE,EAAE,GADN;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,KAAK,EAAE,oBAHT;AAIEC,MAAAA,KAAK,EAAE,UAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KAfQ;AADS,GAArB;AAyBA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,UAAU,CAACI,cAAD,EAAiBU,YAAjB,CAApC,CA1B4B,CA2B5B;;AACA,QAAMS,aAAa,GAAGC,OAAO,IAAI;AAC/BA,IAAAA,OAAO,CAACR,EAAR,GAAad,IAAI,CAACD,EAAlB;AACAqB,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,IAAI,EAAEf,WAAR;AAAqBoB,MAAAA,OAAO,EAAED;AAA9B,KAAD,CAAR;AACD,GAHD,CA5B4B,CAgC5B;AACA;;;AACA,QAAME,aAAa,GAAGV,EAAE,IAAI;AAC1BM,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,IAAI,EAAEb,cAAR;AAAwBkB,MAAAA,OAAO,EAAED;AAAjC,KAAD,CAAR;AACD,GAFD,CAlC4B,CAqC5B;AACA;AACA;AACA;;;AACA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AAAET,MAAAA,QAAQ,EAAEM,KAAK,CAACN,QAAlB;AAA4BQ,MAAAA;AAA5B,KADT;AAAA,cAGGV,KAAK,CAACc;AAHT;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAhDD;;GAAMf,Y;;KAAAA,Y;AAkDN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport {\n  ADD_CONTACT,\n  UPDATE_CONTACT,\n  DELETE_CONTACT,\n  FILTER_CONTACTS,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  CLEAR_FILTER,\n} from \"../types\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [\n      {\n        id: \"1\",\n        name: \"Yasir\",\n        email: \"yasir@gmail.com\",\n        phone: \"55555555\",\n        type: \"personal\",\n      },\n      {\n        id: \"2\",\n        name: \"Tahir\",\n        email: \"tahir@hotmail.com\",\n        phone: \"77777777\",\n        type: \"professional\",\n      },\n      {\n        id: \"3\",\n        name: \"Zubair\",\n        email: \"zubair@hotmail.com\",\n        phone: \"66666666\",\n        type: \"professional\",\n      },\n    ],\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n  // ADD_CONTACT - Crud\n  const createContact = contact => {\n    contact.id = uuid.v4;\n    dispatch({ type: ADD_CONTACT, payload: contact });\n  };\n  // UPDATE_CONTACT - crUd\n  // DELETE_CONTACT - cruD\n  const deleteContact = id => {\n    dispatch({ type: DELETE_CONTACT, payload: contact });\n  };\n  // FILTER_CONTACTS\n  // SET_CURRENT\n  // CLEAR_CURRENT\n  // CLEAR_FILTER\n  return (\n    <ContactContext.Provider\n      value={{ contacts: state.contacts, createContact }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}