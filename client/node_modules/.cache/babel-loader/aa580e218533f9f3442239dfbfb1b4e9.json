{"ast":null,"code":"var _jsxFileName = \"/home/saad/Desktop/udemy/contact-keeper/client/src/components/contacts/Contacts.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext, useEffect } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\";\nimport ContactSearch from \"./ContactSearch\";\nimport ContactCard from \"./ContactCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contacts = () => {\n  _s();\n\n  // import context\n  const contactContext = useContext(ContactContext);\n  const {\n    contacts,\n    filtered,\n    readContacts,\n    loading\n  } = contactContext; // use effect\n\n  use;\n  if (!contacts.length) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"no-contacts\",\n    children: \"please add a contact\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactSearch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contacts-list\",\n      children: filtered ? filtered.map(contact => /*#__PURE__*/_jsxDEV(ContactCard, {\n        contact: contact\n      }, contact._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this)) : contacts.map(contact => /*#__PURE__*/_jsxDEV(ContactCard, {\n        contact: contact\n      }, contact._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contacts, \"6ffJmqxeUUv4Q9skTZKiRD1WUuU=\");\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["/home/saad/Desktop/udemy/contact-keeper/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","ContactContext","ContactSearch","ContactCard","Contacts","contactContext","contacts","filtered","readContacts","loading","use","length","map","contact","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB;AACA,QAAMC,cAAc,GAAGN,UAAU,CAACE,cAAD,CAAjC;AACA,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,YAAtB;AAAoCC,IAAAA;AAApC,MAAgDJ,cAAtD,CAHqB,CAKvB;;AACEK,EAAAA,GAAG;AAEH,MAAI,CAACJ,QAAQ,CAACK,MAAd,EACE,oBAAO;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEF,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACGJ,QAAQ,GACLA,QAAQ,CAACK,GAAT,CAAaC,OAAO,iBAClB,QAAC,WAAD;AAA+B,QAAA,OAAO,EAAEA;AAAxC,SAAkBA,OAAO,CAACC,GAA1B;AAAA;AAAA;AAAA;AAAA,cADF,CADK,GAILR,QAAQ,CAACM,GAAT,CAAaC,OAAO,iBAClB,QAAC,WAAD;AAA+B,QAAA,OAAO,EAAEA;AAAxC,SAAkBA,OAAO,CAACC,GAA1B;AAAA;AAAA;AAAA;AAAA,cADF;AALN;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA1BD;;GAAMV,Q;;KAAAA,Q;AA4BN,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useContext, useEffect } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\";\nimport ContactSearch from \"./ContactSearch\";\nimport ContactCard from \"./ContactCard\";\n\nconst Contacts = () => {\n  // import context\n  const contactContext = useContext(ContactContext);\n  const { contacts, filtered, readContacts, loading } = contactContext;\n\n// use effect\n  use\n\n  if (!contacts.length)\n    return <p className=\"no-contacts\">please add a contact</p>;\n\n  return (\n    <Fragment>\n      <h2>My contacts</h2>\n      <ContactSearch />\n      <div className=\"contacts-list\">\n        {filtered\n          ? filtered.map(contact => (\n              <ContactCard key={contact._id} contact={contact} />\n            ))\n          : contacts.map(contact => (\n              <ContactCard key={contact._id} contact={contact} />\n            ))}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}