{"ast":null,"code":"var _jsxFileName = \"/home/saad/Desktop/udemy/contact-keeper/client/src/components/contacts/ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, Fragment } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\"; // CrUd - Create and Update contact\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = () => {\n  _s();\n\n  const contactContext = useContext(ContactContext);\n  const {\n    createContact,\n    clearCurrentContact,\n    updateContact,\n    current\n  } = contactContext; // add contact details of current contact if edit button is clicked\n\n  useEffect(() => {\n    current ? setContact(current) : setContact({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      type: \"personal\"\n    });\n  }, [contactContext, current]); // default values of the contact form\n\n  const [contact, setContact] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    type: \"personal\"\n  });\n  const {\n    name,\n    email,\n    phone,\n    type\n  } = contact; // add values to temporary object\n\n  const onChange = change => setContact({ ...contact,\n    [change.target.name]: change.target.value\n  }); // if submit button is clicked\n\n\n  const onSubmit = submit => {\n    submit.preventDefault(); // choose weather to create or update a contact\n\n    !current ? createContact(contact) : updateContact(contact); // revert form to default values\n\n    clearContactForm();\n  }; // if clear button is clicked\n\n\n  const clearContactForm = () => clearCurrentContact();\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"contact-form\",\n      id: \"contact-form\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: current ? \"Update contact\" : \"Create contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-field\",\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        onChange: onChange,\n        placeholder: \"Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-field\",\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: onChange,\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-field\",\n        minLength: \"8\",\n        maxLength: \"8\",\n        type: \"phone\",\n        name: \"phone\",\n        value: phone,\n        onChange: onChange,\n        placeholder: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Contact type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"type\",\n          value: \"personal\",\n          checked: type === \"personal\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), \"\\xA0 Personal \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"type\",\n          value: \"professional\",\n          checked: type === \"professional\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), \"\\xA0 Professional\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"button button-submit\",\n          type: \"submit\",\n          value: current ? \"Update contact\" : \"Create contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: current && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button button-form-clear\",\n          onClick: clearContactForm,\n          children: \"Clear form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactForm, \"q3Uxx5f8roOlW0OcHw4CwXGqpS4=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/home/saad/Desktop/udemy/contact-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","Fragment","ContactContext","ContactForm","contactContext","createContact","clearCurrentContact","updateContact","current","setContact","name","email","phone","type","contact","onChange","change","target","value","onSubmit","submit","preventDefault","clearContactForm"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, Fragment } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\n// CrUd - Create and Update contact\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n  const { createContact, clearCurrentContact, updateContact, current } =\n    contactContext;\n\n  // add contact details of current contact if edit button is clicked\n  useEffect(() => {\n    current\n      ? setContact(current)\n      : setContact({\n          name: \"\",\n          email: \"\",\n          phone: \"\",\n          type: \"personal\",\n        });\n  }, [contactContext, current]);\n\n  // default values of the contact form\n  const [contact, setContact] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    type: \"personal\",\n  });\n  const { name, email, phone, type } = contact;\n\n  // add values to temporary object\n  const onChange = change =>\n    setContact({ ...contact, [change.target.name]: change.target.value });\n\n  // if submit button is clicked\n  const onSubmit = submit => {\n    submit.preventDefault();\n    // choose weather to create or update a contact\n    !current ? createContact(contact) : updateContact(contact);\n    // revert form to default values\n    clearContactForm();\n  };\n\n  // if clear button is clicked\n  const clearContactForm = () => clearCurrentContact();\n\n  return (\n    <Fragment>\n      <form className=\"contact-form\" id=\"contact-form\" onSubmit={onSubmit}>\n        <h2>{current ? \"Update contact\" : \"Create contact\"}</h2>\n        {/* input fields */}\n        <input\n          className=\"input-field\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={onChange}\n          placeholder=\"Name\"\n          required\n        />\n        <input\n          className=\"input-field\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={onChange}\n          placeholder=\"Email\"\n        />\n        <input\n          className=\"input-field\"\n          minLength=\"8\"\n          maxLength=\"8\"\n          type=\"phone\"\n          name=\"phone\"\n          value={phone}\n          onChange={onChange}\n          placeholder=\"Phone\"\n        />\n        {/* personal or professional check box */}\n        <div>\n          <h3>Contact type</h3>\n          <input\n            type=\"radio\"\n            name=\"type\"\n            value=\"personal\"\n            checked={type === \"personal\"}\n            onChange={onChange}\n          />\n          &nbsp; Personal &nbsp;\n          <input\n            type=\"radio\"\n            name=\"type\"\n            value=\"professional\"\n            checked={type === \"professional\"}\n            onChange={onChange}\n          />\n          &nbsp; Professional\n        </div>\n        {/* submit and clear button */}\n        <div>\n          <input\n            className=\"button button-submit\"\n            type=\"submit\"\n            value={current ? \"Update contact\" : \"Create contact\"}\n          />\n        </div>\n        <div>\n          {current && (\n            <button\n              className=\"button button-form-clear\"\n              onClick={clearContactForm}\n            >\n              Clear form\n            </button>\n          )}\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}