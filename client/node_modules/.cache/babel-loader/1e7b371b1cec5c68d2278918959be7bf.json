{"ast":null,"code":"import _toConsumableArray from\"/home/saad/Desktop/my-projects/contacts-app/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/saad/Desktop/my-projects/contacts-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{CREATE_CONTACT,READ_CONTACTS,SET_CURRENT,CLEAR_CURRENT,UPDATE_CONTACT,DELETE_CONTACT,CLEAR_CONTACTS,FILTER_CONTACTS,CLEAR_FILTER,CONTACT_ERROR}from\"../types\";// reducer\nvar contactReducer=function contactReducer(state,action){switch(action.type){// create contact\ncase CREATE_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:[action.payload].concat(_toConsumableArray(state.contacts)),loading:false});// read contact\ncase READ_CONTACTS:return _objectSpread(_objectSpread({},state),{},{contacts:action.payload,loading:false});// update contact\ncase SET_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:action.payload});case CLEAR_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:null});case UPDATE_CONTACT:return _objectSpread(_objectSpread({},state),{},{// if the id of current matches existing contact, update value, else old value\ncontacts:state.contacts.map(function(contact){return contact._id===action.payload._id?action.payload:contact;}),loading:false});// delete contact\ncase DELETE_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:state.contacts.filter(function(contact){return contact._id!==action.payload;}),loading:false});// clear contacts\ncase CLEAR_CONTACTS:return _objectSpread(_objectSpread({},state),{},{contacts:[],filtered:null,error:null,current:null});// search contacts\ncase FILTER_CONTACTS:return _objectSpread(_objectSpread({},state),{},{filtered:state.contacts.filter(function(contact){var regex=new RegExp(\"\".concat(action.payload),\"gi\");return contact.name.match(regex)||contact.phone.match(regex);})});case CLEAR_FILTER:return _objectSpread(_objectSpread({},state),{},{filtered:null});// get error message\ncase CONTACT_ERROR:return _objectSpread(_objectSpread({},state),{},{error:action.payload});default:return state;}};export default contactReducer;","map":{"version":3,"sources":["/home/saad/Desktop/my-projects/contacts-app/client/src/context/contact/contactReducer.js"],"names":["CREATE_CONTACT","READ_CONTACTS","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","DELETE_CONTACT","CLEAR_CONTACTS","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","contactReducer","state","action","type","contacts","payload","loading","current","map","contact","_id","filter","filtered","error","regex","RegExp","name","match","phone"],"mappings":"iRAAA,OACEA,cADF,CAEEC,aAFF,CAGEC,WAHF,CAIEC,aAJF,CAKEC,cALF,CAMEC,cANF,CAOEC,cAPF,CAQEC,eARF,CASEC,YATF,CAUEC,aAVF,KAWO,UAXP,CAaA;AACA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACxC,OAAQA,MAAM,CAACC,IAAf,EACE;AACA,IAAKb,CAAAA,cAAL,CACE,sCACKW,KADL,MAEEG,QAAQ,EAAGF,MAAM,CAACG,OAAV,4BAAsBJ,KAAK,CAACG,QAA5B,EAFV,CAGEE,OAAO,CAAE,KAHX,GAMF;AACA,IAAKf,CAAAA,aAAL,CACE,sCAAYU,KAAZ,MAAmBG,QAAQ,CAAEF,MAAM,CAACG,OAApC,CAA6CC,OAAO,CAAE,KAAtD,GAEF;AACA,IAAKd,CAAAA,WAAL,CACE,sCAAYS,KAAZ,MAAmBM,OAAO,CAAEL,MAAM,CAACG,OAAnC,GACF,IAAKZ,CAAAA,aAAL,CACE,sCAAYQ,KAAZ,MAAmBM,OAAO,CAAE,IAA5B,GACF,IAAKb,CAAAA,cAAL,CACE,sCACKO,KADL,MAEE;AACAG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeI,GAAf,CAAmB,SAAAC,OAAO,QAClCA,CAAAA,OAAO,CAACC,GAAR,GAAgBR,MAAM,CAACG,OAAP,CAAeK,GAA/B,CAAqCR,MAAM,CAACG,OAA5C,CAAsDI,OADpB,EAA1B,CAHZ,CAMEH,OAAO,CAAE,KANX,GASF;AACA,IAAKX,CAAAA,cAAL,CACE,sCACKM,KADL,MAEEG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeO,MAAf,CACR,SAAAF,OAAO,QAAIA,CAAAA,OAAO,CAACC,GAAR,GAAgBR,MAAM,CAACG,OAA3B,EADC,CAFZ,CAKEC,OAAO,CAAE,KALX,GAQF;AACA,IAAKV,CAAAA,cAAL,CACE,sCACKK,KADL,MAEEG,QAAQ,CAAE,EAFZ,CAGEQ,QAAQ,CAAE,IAHZ,CAIEC,KAAK,CAAE,IAJT,CAKEN,OAAO,CAAE,IALX,GAQF;AACA,IAAKV,CAAAA,eAAL,CACE,sCACKI,KADL,MAEEW,QAAQ,CAAEX,KAAK,CAACG,QAAN,CAAeO,MAAf,CAAsB,SAAAF,OAAO,CAAI,CACzC,GAAMK,CAAAA,KAAK,CAAG,GAAIC,CAAAA,MAAJ,WAAcb,MAAM,CAACG,OAArB,OAAd,CACA,MAAOI,CAAAA,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,GAA6BL,OAAO,CAACS,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC,CACD,CAHS,CAFZ,GAOF,IAAKhB,CAAAA,YAAL,CACE,sCAAYG,KAAZ,MAAmBW,QAAQ,CAAE,IAA7B,GAEF;AACA,IAAKb,CAAAA,aAAL,CACE,sCAAYE,KAAZ,MAAmBY,KAAK,CAAEX,MAAM,CAACG,OAAjC,GAEF,QACE,MAAOJ,CAAAA,KAAP,CAjEJ,CAmED,CApED,CAsEA,cAAeD,CAAAA,cAAf","sourcesContent":["import {\n  CREATE_CONTACT,\n  READ_CONTACTS,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  DELETE_CONTACT,\n  CLEAR_CONTACTS,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n} from \"../types\";\n\n// reducer\nconst contactReducer = (state, action) => {\n  switch (action.type) {\n    // create contact\n    case CREATE_CONTACT:\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n        loading: false,\n      };\n\n    // read contact\n    case READ_CONTACTS:\n      return { ...state, contacts: action.payload, loading: false };\n\n    // update contact\n    case SET_CURRENT:\n      return { ...state, current: action.payload };\n    case CLEAR_CURRENT:\n      return { ...state, current: null };\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        // if the id of current matches existing contact, update value, else old value\n        contacts: state.contacts.map(contact =>\n          contact._id === action.payload._id ? action.payload : contact\n        ),\n        loading: false,\n      };\n\n    // delete contact\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact._id !== action.payload\n        ),\n        loading: false,\n      };\n\n    // clear contacts\n    case CLEAR_CONTACTS:\n      return {\n        ...state,\n        contacts: [],\n        filtered: null,\n        error: null,\n        current: null,\n      };\n\n    // search contacts\n    case FILTER_CONTACTS:\n      return {\n        ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, `gi`);\n          return contact.name.match(regex) || contact.phone.match(regex);\n        }),\n      };\n    case CLEAR_FILTER:\n      return { ...state, filtered: null };\n\n    // get error message\n    case CONTACT_ERROR:\n      return { ...state, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default contactReducer;\n"]},"metadata":{},"sourceType":"module"}